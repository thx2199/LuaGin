local controller_content = [[
-- controller generated by gin
local {{CNAME}}Controller = {}
local {{CNAME}} = require 'app.models.{{MNAME}}'

-- list the items.
function {{CNAME}}Controller:list()
    local attr = self.request.uri_params or {}
    attr['is_deleted'] = 0 -- default filter
    local options = {}
    if attr.limit then
        options.limit = attr.limit
        attr.limit = nil
    end
    if attr.offset then
        options.offset = attr.offset
        attr.offset = nil
    end
    if attr.order then
        options.order = attr.order
        attr.order = nil
    end
    local {{MNAME}} = {{CNAME}}.where(attr, options)
    -- TODO: add pagination
    -- local total = {{CNAME}}.count(attr)
    -- filter
    local items = {}
    for _, item in ipairs({{MNAME}}) do
        table.insert(items, item:filter())
    end
    return 200, {code=0,msg="success",data=items}
end
-- get the options of the item
function {{CNAME}}Controller:schemas()
    local schemas = require 'db.schemas.schemas'
    return 200, { code = 0, msg = "success", data = schemas.{{MNAME}} }
end
-- get the item by id
function {{CNAME}}Controller:read()
    local {{item}} = {{CNAME}}.find_by({id=self.params.id,is_deleted=0})
    if {{item}} == nil then
        return 200, {code=1,msg = "object not found"}
    end
    return 200, {code=0,msg = "success",data = {{item}}:filter()}
end

-- create the item
function {{CNAME}}Controller:create()
    local params = self.request.body
    -- local params = self:accepted_params({"field"}, self.request.body)
    local new_{{item}} = {{CNAME}}.create(params)
    return 200, {code = 0, msg = "success", data = new_{{item}}:filter()}
end

-- update the item by id
function {{CNAME}}Controller:update()
    local {{item}} = {{CNAME}}.find_by({id=self.params.id,is_deleted=0})
    if {{item}} == nil then
        return 200, {code=1,msg = "object not found"}
    end
    local params = self.request.body
    -- local params = self:accepted_params({"field"}, self.request.body)
    for k, v in pairs(params) do
        {{item}}[k] = v
    end
    {{item}}:save()
    return 200, {code = 0, msg = "success", data = {{item}}:filter()}
end

-- delete the item by id, just set is_deleted to 1, not really delete the item from database
function {{CNAME}}Controller:delete()
    local {{item}} = {{CNAME}}.find_by({id=self.params.id, is_deleted=0})
    if {{item}} == nil then
        return 200, {code=1,msg = "object not found"}
    end
    {{item}}.is_deleted = 1
    {{item}}:save()
    return 200, {code = 0, msg = "success"}
end

return {{CNAME}}Controller
]]
return controller_content
